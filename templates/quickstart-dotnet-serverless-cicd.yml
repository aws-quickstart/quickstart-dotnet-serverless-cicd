AWSTemplateFormatVersion: '2010-09-09'
Description: Codepipeline for dotnet serverless CI/CD
Parameters:
  PipelineName:
    Type: String
    Description: Name for code pipeline
  RepositoryName:
    Type: String
    Description: GitHub repository name
    Default: github-repository-name
  BranchName:
    Type: String
    Description: GitHub branch name
    Default: master
  GitHubOwner:
    Type: String
  GitHubSecret:
    Type: String
    NoEcho: true
  GitHubOAuthToken:
    Type: String
    NoEcho: true
  ElasticBeanstalkAppName:
    Type: String
    Description: ElasticBeanStalk application name
  ElasticBeanstalkEnvName:
    Type: String
    Description: ElasticBeanStalk environment name
  BuildContainerImage:
    Type: String
    Description: Ex:<accountId>.dkr.ecr.<region>.amazonaws.com/<imageName>:latest
  CodeBuildEncryptionKeyARN:
    Type: String
    Description: Ex:arn:aws:kms:<region>:<accountID>:alias/aws/s3
Resources:
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    DependsOn: CodeBuildServiceRole
    Properties:
      Name: !Sub ${PipelineName}-CodeBuild-Project
      Source:
        Type: CODEPIPELINE
        InsecureSsl: false
      Artifacts:
        Type: CODEPIPELINE
        Packaging: NONE
        EncryptionDisabled: false
      Cache:
        Type: NO_CACHE
      Environment:
        Type: WINDOWS_CONTAINER
        Image: Ref! BuildContainerImage
        ComputeType: BUILD_GENERAL1_MEDIUM
        PrivilegedMode: false
      ServiceRole:   !GetAtt 
        - CodeBuildServiceRole
        - Arn
      TimeoutInMinutes: 60
      QueuedTimeoutInMinutes: 480
      EncryptionKey: Ref! CodeBuildEncryptionKeyARN
      Badge:
        BadgeEnabled: false
      LogsConfig:
        CloudWatchLogs:
          Status: ENABLED
        S3Logs:
          Status: DISABLED
  CodePipelineArtifactStoreBucket:
    Type: 'AWS::S3::Bucket'
  AppPipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    DependsOn: 
      - CodePipelineServiceRole
      - CodeBuildProject
      - CodePipelineArtifactStoreBucket
      - CodePipelineServiceRole
    Properties:
      Name: !Ref PipelineName
      RoleArn:  !GetAtt 
        - CodePipelineServiceRole
        - Arn
      ArtifactStore:
        Type: S3
        Location: !Ref CodePipelineArtifactStoreBucket
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: '1'
              RunOrder: 1
              Configuration:
                Branch: !Ref BranchName
                OAuthToken: !Ref GitHubOAuthToken
                Owner: !Ref GitHubOwner
                PollForSourceChanges: false
                Repo: !Ref RepositoryName
              OutputArtifacts:
                - Name: SourceArtifact      
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              RunOrder: 1
              Configuration:
                ProjectName: Ref! CodeBuildProject
              OutputArtifacts:
                - Name: BuildArtifact
              InputArtifacts:
                - Name: SourceArtifact
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: ElasticBeanstalk
                Version: 1
              RunOrder: 1
              Configuration:
                ApplicationName: Ref! ElasticBeanstalkAppName
                EnvironmentName: Ref! ElasticBeanstalkEnvName
              InputArtifacts:
                - Name: BuildArtifact
  CodePipelineServiceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: Sub! AWS-CodePipeline-Service-{PipelineName}
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Action:
                  - 'iam:PassRole'
                Resource: '*'
                Effect: Allow
                Condition:
                  StringEqualsIfExists:
                    'iam:PassedToService':
                      - cloudformation.amazonaws.com
                      - elasticbeanstalk.amazonaws.com
                      - ec2.amazonaws.com
                      - ecs-tasks.amazonaws.com
              - Action:
                  - 'codecommit:CancelUploadArchive'
                  - 'codecommit:GetBranch'
                  - 'codecommit:GetCommit'
                  - 'codecommit:GetUploadArchiveStatus'
                  - 'codecommit:UploadArchive'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'codedeploy:CreateDeployment'
                  - 'codedeploy:GetApplication'
                  - 'codedeploy:GetApplicationRevision'
                  - 'codedeploy:GetDeployment'
                  - 'codedeploy:GetDeploymentConfig'
                  - 'codedeploy:RegisterApplicationRevision'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'elasticbeanstalk:*'
                  - 'ec2:*'
                  - 'elasticloadbalancing:*'
                  - 'autoscaling:*'
                  - 'cloudwatch:*'
                  - 's3:*'
                  - 'sns:*'
                  - 'cloudformation:*'
                  - 'rds:*'
                  - 'sqs:*'
                  - 'ecs:*'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'opsworks:CreateDeployment'
                  - 'opsworks:DescribeApps'
                  - 'opsworks:DescribeCommands'
                  - 'opsworks:DescribeDeployments'
                  - 'opsworks:DescribeInstances'
                  - 'opsworks:DescribeStacks'
                  - 'opsworks:UpdateApp'
                  - 'opsworks:UpdateStack'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:DescribeStacks'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:DeleteChangeSet'
                  - 'cloudformation:DescribeChangeSet'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:SetStackPolicy'
                  - 'cloudformation:ValidateTemplate'
                Resource: '*'
                Effect: Allow
              - Action:
                  - 'codebuild:BatchGetBuilds'
                  - 'codebuild:StartBuild'
                Resource: '*'
                Effect: Allow
              - Effect: Allow
                Action:
                  - 'devicefarm:ListProjects'
                  - 'devicefarm:ListDevicePools'
                  - 'devicefarm:GetRun'
                  - 'devicefarm:GetUpload'
                  - 'devicefarm:CreateUpload'
                  - 'devicefarm:ScheduleRun'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'servicecatalog:ListProvisioningArtifacts'
                  - 'servicecatalog:CreateProvisioningArtifact'
                  - 'servicecatalog:DescribeProvisioningArtifact'
                  - 'servicecatalog:DeleteProvisioningArtifact'
                  - 'servicecatalog:UpdateProduct'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'cloudformation:ValidateTemplate'
                Resource: '*'
              - Effect: Allow
                Action:
                  - 'ecr:DescribeImages'
                Resource: '*'
  CodeBuildServiceRole:
        Type: 'AWS::IAM::Role'
        Properties:
          AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Principal:
                  Service:
                    - codebuild.amazonaws.com
                Action: 'sts:AssumeRole'
          Path: /
          Policies:
            - PolicyName: Sub! AWS-CodeBuild-Service-{PipelineName}
              PolicyDocument:
                Version: 2012-10-17
                Statement:
                    - Effect: Allow
                      Resource:
                      - arn:Sub! aws:logs:{AWS::Region}:{AWS::AccountId}:log-group:/aws/codebuild/${PipelineName}-CodeBuild-Project
                      - arn:Sub! aws:logs:{AWS::Region}:{AWS::AccountId}:log-group:/aws/codebuild/${PipelineName}-CodeBuild-Project:*
                      Action:
                      - logs:CreateLogGroup
                      - logs:CreateLogStream
                      - logs:PutLogEvents
                    - Effect: Allow
                      Resource:
                      - arn:  !GetAtt 
                        - CodePipelineArtifactStoreBucket
                        - Arn
                      Action:
                      - s3:PutObject
                      - s3:GetObject
                      - s3:GetObjectVersion
                      - s3:GetBucketAcl
                      - s3:GetBucketLocation
